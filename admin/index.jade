doctype html
html

  head
    meta(charset='utf8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')
    meta(name='description', content='description of your site')
    meta(name='author', content= "author of the site")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title Roots Blog Admin
    link(href='http://fonts.googleapis.com/css?family=Merriweather', rel='stylesheet')
    link(href='http://fonts.googleapis.com/css?family=Muli:300', rel='stylesheet')
    
    link(rel="stylesheet" href="//cms.netlify.com/assets/cms.css")
    
    != css('/')
    
    base(href="/admin/")
  body
    script(type="text/x-handlebars" data-template-name='cms/preview/posts').
      {{cms-preview field='tags'}}
      <h3 class="post-title">{{entry.title}}</h3>
      {{cms-preview field='body'}}
    
    script(type="text/x-handlebars" data-template-name='cms/widgets/tags-control')
      {{input value=raw_value}}
          
    script(type="text/x-handlebars" data-template-name='cms/widgets/tags-preview').
      {{#if tags}}
        <h4 class="tags-container">
          <span class="tags-list">{{tags}}</span>
        </h4>
      {{/if}}
      

    
    script(src="//cms.netlify.com/assets/vendor.js")
    script(src="//cms.netlify.com/assets/cms.js")
    script.
      CMS.WidgetControl("tags", {
        init: function() {
          this._super();
          this.set("raw_value", (this.get("widget.value") || []).join(", "));
        },
        raw_value: null,
        setWidgetValue: function() {
          this.set("widget.value", (this.get("raw_value").split(",").map(function(e) { return e.trim()})))
        }.observes("raw_value")
      });
      
      CMS.WidgetPreview("tags", {
        tags: function() {
          var value = this.get("widget.value");
          if (value && value.length > 1) {
            return value.slice(0,-1).join(", ") + " & " + value.slice(-1);
          } else {
            return value ? value[0] : "";
          }
        }.property("widget.value")
      });
